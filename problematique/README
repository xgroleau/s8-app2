# Copyright (c) 2018, Simon Brodeur
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
#  - Redistributions of source code must retain the above copyright notice, 
#    this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright notice, 
#    this list of conditions and the following disclaimer in the documentation 
#    and/or other materials provided with the distribution.
#  - Neither the name of Simon Brodeur nor the names of its contributors 
#    may be used to endorse or promote products derived from this software 
#    without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
#

# Author: Simon Brodeur <simon.brodeur@usherbrooke.ca>
# Universit√© de Sherbrooke, APP3 S8GIA, A2018

# !!! IMPORTANT NOTICE !!!
The modules torcs.control.core and torcs.optim.core provide the Python interface with the TORCS simulator. 
Do not edit these files!

# ------------------------------------------------------------------------------------------
#     Control task
# ------------------------------------------------------------------------------------------

For a simple control example, analyze and execute the file 'drive-simple/main.py'.
You can later use this script as a template to build a neural network and fuzzy logic controller.
Implementation for the fuzzy logic controller should be placed in the 'drive-fuzzy' directory.
Implementation for the neural network controller should be placed in the 'drive-nnet' directory.
Currently, these two directories only contain base scripts that produce random actions.

The control scripts allow to record the episode on each track.
An example of episode data can be visualized with the script 'visualization/main.py'.

# ------------------------------------------------------------------------------------------
#      Optimization task
# ------------------------------------------------------------------------------------------

See documentation in directory 'optimize-ga'.
